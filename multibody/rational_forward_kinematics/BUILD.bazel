# -*- python -*-

load(
    "@drake//tools/skylark:drake_cc.bzl",
    "drake_cc_binary",
    "drake_cc_googletest",
    "drake_cc_library",
    "drake_cc_package_library",
    "drake_cc_test",
)
load(
    "@drake//tools/skylark:drake_proto.bzl",
    "drake_cc_proto_library",
)
load("//tools/skylark:test_tags.bzl", "gurobi_test_tags")
load("//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

drake_cc_library(
    name = "rational_forward_kinematics",
    srcs = [
        "rational_forward_kinematics.cc",
        "rational_forward_kinematics_internal.cc",
        ],
    hdrs = [
        "rational_forward_kinematics.h",
        "rational_forward_kinematics_internal.h"
        ],
    deps = [
        "//common:symbolic",
        "//multibody/plant",
    ],
)

drake_cc_library(
    name = "generate_monomial_basis_util",
    srcs = ["generate_monomial_basis_util.cc"],
    hdrs = ["generate_monomial_basis_util.h"],
    deps = [
        "//common:symbolic",
    ],
)

drake_cc_library(
    name = "configuration_space_collision_free_region",
    srcs = ["configuration_space_collision_free_region.cc"],
    hdrs = ["configuration_space_collision_free_region.h"],
    deps = [
        ":generate_monomial_basis_util",
        ":rational_forward_kinematics",
        "//solvers:mathematical_program",
    ],
)

drake_cc_library(
    name = "convex_geometry",
    srcs = ["convex_geometry.cc"],
    hdrs = ["convex_geometry.h"],
    deps = [
        "//solvers:mathematical_program",
    ],
)

drake_cc_library(
    name = "closest_pair",
    srcs = ["closest_pair.cc"],
    hdrs = ["closest_pair.h"],
    deps = [
        "//multibody/multibody_tree",
    ],
)

drake_cc_library(
    name = "rational_forward_kinematics_test_utilities",
    testonly = 1,
    srcs = ["test/rational_forward_kinematics_test_utilities.cc"],
    hdrs = ["test/rational_forward_kinematics_test_utilities.h"],
    data = [
        "//manipulation/models/iiwa_description:models",
    ],
    deps = [
        ":configuration_space_collision_free_region",
        "//common:find_resource",
        "//multibody/benchmarks/kuka_iiwa_robot",
        "//multibody/multibody_tree/multibody_plant",
        "//multibody/parsing:parser",
    ],
)

drake_cc_googletest(
    name = "rational_forward_kinematics_test",
    deps = [
        ":rational_forward_kinematics",
        ":rational_forward_kinematics_test_utilities",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:symbolic_test_util",
    ],
)

drake_cc_googletest(
    name = "rational_forward_kinematics_internal_test",
    deps = [
        ":rational_forward_kinematics",
        ":rational_forward_kinematics_test_utilities",
    ],
)

drake_cc_googletest(
    name = "generate_monomial_basis_util_test",
    deps = [
        ":generate_monomial_basis_util",
    ],
)

drake_cc_googletest(
    name = "configuration_space_collision_free_region_test",
    deps = [
        ":configuration_space_collision_free_region",
        ":rational_forward_kinematics_test_utilities",
        "//common/test_utilities:eigen_matrix_compare",
        "//common/test_utilities:symbolic_test_util",
    ],
)

drake_cc_binary(
    name = "iiwa_two_boxes_demo",
    testonly = 1,
    srcs = ["test/iiwa_two_boxes_demo.cc"],
    deps = [
        ":rational_forward_kinematics_test_utilities",
        "//solvers:mathematical_program",
        "@gflags",
    ]
)

drake_cc_binary(
    name = "iiwa_two_boxes_reshuffled_tree_demo",
    testonly = 1,
    srcs = ["test/iiwa_two_boxes_reshuffled_tree_demo.cc"],
    deps = [
        ":rational_forward_kinematics_test_utilities",
        "//solvers:mathematical_program",
        "@gflags",
    ],
)
drake_cc_googletest(
    name = "convex_geometry_test",
    deps = [
        ":convex_geometry",
        "//common/test_utilities:eigen_matrix_compare",
    ],
)

drake_cc_binary(
    name = "dual_arm_iiwa_self_collision_avoidance_demo",
    testonly = 1,
    srcs = ["test/dual_arm_iiwa_self_collision_avoidance_demo.cc"],
    deps = [
        ":configuration_space_collision_free_region",
        ":rational_forward_kinematics_test_utilities",
        "//common:find_resource",
        "//multibody/parsing:parser",
        "//multibody/inverse_kinematics:inverse_kinematics",
        "//solvers:mathematical_program",
        "@gtest//:without_main",
    ],
)

add_lint_tests()
